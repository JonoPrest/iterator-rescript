// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Iter from "./Iter.res.mjs";
import * as Iterator from "./Iterator.res.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

var counter = Iterator.make({
      contents: 0
    }, (function (count) {
        var value = count.contents;
        if (value > 10) {
          return ;
        } else {
          count.contents = count.contents + 1 | 0;
          return value;
        }
      }));

Iterator.forOf(counter, (function (item) {
        var str;
        if (item !== 3) {
          throw Iterator.$$continue;
        }
        str = "three";
        console.log(str);
      }));

var fibIter = Iter.makeWithNextInput({
      currentN: 0,
      nextN: 1
    }, (function (state, input) {
        var shouldReset = Belt_Option.getWithDefault(input, false);
        if (shouldReset) {
          state.currentN = 0;
          state.nextN = 1;
        }
        var currentN = state.currentN;
        var nextN = state.nextN;
        state.currentN = nextN;
        state.nextN = currentN + nextN | 0;
        return currentN;
      }));

var sequence = Iter.getSequence(fibIter);

console.log("Fib sequence");

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(true).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

console.log(sequence.next(undefined).value);

export {
  counter ,
  fibIter ,
  sequence ,
}
/* counter Not a pure module */
